<UserControl x:Class="Client.Views.RoomView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Client.Views"
             xmlns:c="clr-namespace:Client.Converters"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <c:KickButtonVisibilityConverter x:Key="kickButtonVisibilityConverter"/>
        <c:IsOwnerToVisibilityConverter x:Key="isOwnerToVisibilityConverter"/>
        <c:MyColorToColorConverter x:Key="myColorToColorConverter"/>
    </UserControl.Resources>
    
    <StackPanel>
        <StackPanel>
            <TextBlock Text="Name"
                   Margin="1,1,1,1"/>
            <TextBlock Text="{Binding RoomName, UpdateSourceTrigger=PropertyChanged}"
                 Margin="1,1,1,1"/>
            <TextBlock Text="Private"
                   Margin="1,1,1,1"/>
            <TextBlock Text="{Binding RoomPrivate, UpdateSourceTrigger=PropertyChanged}"
                 Margin="1,1,1,1"/>
            <TextBlock Text="Password"
                   Margin="1,1,1,1"/>
            <TextBlock Text="{Binding RoomPassword, UpdateSourceTrigger=PropertyChanged}"
                 Margin="1,1,1,1"/>
            <TextBlock Text="Games"
                   Margin="1,1,1,1"/>
            <TextBlock Text="{Binding RoomGames, UpdateSourceTrigger=PropertyChanged}"
                 Margin="1,1,1,1"/>
            <TextBlock Text="MaxPlayers"
                   Margin="1,1,1,1"/>
            <TextBlock Text="{Binding RoomMaxPlayers, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}"
                 Margin="1,1,1,1"/>
            </StackPanel>
        <TextBlock Text="Player"
                   Margin="1,1,1,1"/>
        <TextBox Text="{Binding PlayerNameId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Margin="1,1,1,1"/>
        <Button Content="Invite"
                Command="{Binding InviteCommand}"
                IsEnabled="{Binding CanInvite}"
                Margin="2"/>
        <Button Content="Start"
                Command="{Binding StartCommand}"
                Margin="2">
            <Button.Visibility>
                <MultiBinding Converter="{StaticResource isOwnerToVisibilityConverter}">
                    <Binding Path="OwnerId"/>
                    <Binding Path="ClientId"/>
                </MultiBinding>
            </Button.Visibility>
        </Button>
        <Button Content="Leave"
                Command="{Binding LeaveCommand}"
                Margin="2"/>
        <xctk:ColorPicker SelectedColor="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Content="Change color"
                Command="{Binding ChangeColorCommand}"
                Margin="2"/>
        <ListBox x:Name="players" ItemsSource="{Binding Players}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding ClientInfo.Id}" 
                                           Foreground="{Binding Color, Converter={StaticResource myColorToColorConverter}}" 
                                           Margin="2"/>
                        <TextBlock Text="{Binding ClientInfo.Name}" 
                                           Foreground="{Binding Color, Converter={StaticResource myColorToColorConverter}}" 
                                           Margin="2"/>
                        <Button Content="Kick"
                                Command="{Binding ElementName=players, Path=DataContext.KickCommand}"
                                CommandParameter="{Binding}"
                                Margin="2">
                            <Button.Visibility>
                                <MultiBinding Converter="{StaticResource kickButtonVisibilityConverter}">
                                    <Binding ElementName="players" Path="DataContext.OwnerId"/>
                                    <Binding ElementName="players" Path="DataContext.ClientId"/>
                                    <Binding Path="ClientInfo.Id"/>
                                </MultiBinding>
                            </Button.Visibility>
                        </Button>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel>
            <StackPanel.Visibility>
                <MultiBinding Converter="{StaticResource isOwnerToVisibilityConverter}">
                    <Binding Path="OwnerId"/>
                    <Binding Path="ClientId"/>
                </MultiBinding>
            </StackPanel.Visibility>
            <TextBlock Text="Name"
                   Margin="1,1,1,1"/>
            <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Margin="1,1,1,1"/>

            <CheckBox Content="Private" IsChecked="{Binding Private, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Margin="1,1,1,1"/>

            <TextBlock Text="Password"
                   Margin="1,1,1,1"/>
            <TextBox Text="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Margin="1,1,1,1"/>

            <TextBlock Text="Games"
                   Margin="1,1,1,1"/>
            <TextBox Text="{Binding Games, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Margin="1,1,1,1"/>

            <TextBlock Text="Max players"
                   Margin="1,1,1,1"/>
            <TextBox Text="{Binding MaxPlayers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Margin="1,1,1,1"/>

            <Button Content="Edit room"
                Command="{Binding EditRoomCommand}"
                IsEnabled="{Binding CanEditRoom}"
                Margin="1,1,1,1"/>
        </StackPanel>
    </StackPanel>
</UserControl>
